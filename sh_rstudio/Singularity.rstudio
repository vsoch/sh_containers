Bootstrap: docker
From: rocker/rstudio-stable


%environment
    SINGULARITY_CACHEDIR=$SCRATCH/.singularity
    TUNNEL_HOST="login.sherlock.stanford.edu"
    export SINGULARITY_CACHEDIR TUNNEL_HOST

%help
    See https://github.com/vsoch/sh_containers/tree/master/sh_rstudio
   
    Generally, you want some rstudio.sh wrapper to:
        1. load singularity:
        2. run the container

    E.g.,
        module load singularity/2.4.5
        singularity run -p <container>

    And then submit the job:
        srun -J job-name -p dev -t 01:00:00 --qos normal --mem 4GB --x11=first \
                                            --pty --unbuffered /bin/bash


%post
    # Install nginx - we will use for proxy
    apt-get update && apt-get install -y nginx
    mv /nginx.conf /etc/nginx/nginx.conf
    mv /rstudio.conf /etc/nginx/conf.d/rstudio.conf
    # The only way to connect to rserver is via the proxy server
    echo "www-address=127.0.0.1" >> /etc/rstudio/rserver.conf 

%files
    nginx/nginx.conf /nginx.conf
    nginx/rstudio.conf /rstudio.conf

%runscript
    cd $SCRATCH
    CLUSTER_PORT=$(( (UID*RANDOM)%55500 + 9000 ))
    R_HOST=$(hostname -s)
    R_PORT=$(( CLUSTER_PORT + RANDOM%1000 ))
    echo "Step 1: Create a tunnel from your local machine to the cluster"
    echo "ssh -f -L ${CLUSTER_PORT}:${R_HOST}:${R_PORT} ${USER}@${TUNNEL_HOST} sleep 300"
    CMD="rserver --www-address=${R_HOST} --www-port=${R_PORT} --auth-validate-users=1 --auth-encrypt-password=1"
    echo "Step 2: open http://localhost:${CLUSTER_PORT}"
    $CMD
